<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.join.epileptic.mapper.hzhIllnerssed.HzhIllnerssedMapper">
  <resultMap id="BaseResultMap" type="com.join.epileptic.entity.hzhIllnerssed.HzhIllnerssed">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tell" jdbcType="VARCHAR" property="tell" />
    <result column="first" jdbcType="VARCHAR" property="first" />
    <result column="symptom" jdbcType="VARCHAR" property="symptom" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="otherstatus" jdbcType="VARCHAR" property="otherstatus" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="otherreason" jdbcType="VARCHAR" property="otherreason" />
    <result column="sick" jdbcType="VARCHAR" property="sick" />
    <result column="rate" jdbcType="VARCHAR" property="rate" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="firstgo" jdbcType="VARCHAR" property="firstgo" />
    <result column="otherfirstgo" jdbcType="VARCHAR" property="otherfirstgo" />
    <result column="old" jdbcType="VARCHAR" property="old" />
    <result column="oldreason" jdbcType="VARCHAR" property="oldreason" />
    <result column="total" jdbcType="VARCHAR" property="total" />
    <result column="totalreason" jdbcType="VARCHAR" property="totalreason" />
    <result column="follow" jdbcType="VARCHAR" property="follow" />
    <result column="followreason" jdbcType="VARCHAR" property="followreason" />
    <result column="happen" jdbcType="VARCHAR" property="happen" />
    <result column="happenreason" jdbcType="VARCHAR" property="happenreason" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="child_id" jdbcType="INTEGER" property="childId" />
    <result column="first_month" jdbcType="INTEGER" property="firstMonth" />
    <result column="hfirstgo" jdbcType="VARCHAR" property="hfirstgo" />
    <result column="hotherfirstgo" jdbcType="VARCHAR" property="hotherfirstgo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tell, `first`, symptom, `status`, otherstatus, reason, otherreason, sick, rate, 
    `time`, firstgo, otherfirstgo, `old`, oldreason, total, totalreason, follow, followreason, 
    happen, happenreason, `count`, child_id, first_month, hfirstgo, hotherfirstgo
  </sql>
  <select id="selectByExample" parameterType="com.join.epileptic.entity.hzhIllnerssed.HzhIllnerssedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hzh_illnerssed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hzh_illnerssed
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hzh_illnerssed
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.join.epileptic.entity.hzhIllnerssed.HzhIllnerssedExample">
    delete from hzh_illnerssed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.join.epileptic.entity.hzhIllnerssed.HzhIllnerssed" useGeneratedKeys="true">
    insert into hzh_illnerssed (tell, `first`, symptom, 
      `status`, otherstatus, reason, 
      otherreason, sick, rate, 
      `time`, firstgo, otherfirstgo, 
      `old`, oldreason, total, 
      totalreason, follow, followreason, 
      happen, happenreason, `count`, 
      child_id, first_month, hfirstgo, 
      hotherfirstgo)
    values (#{tell,jdbcType=VARCHAR}, #{first,jdbcType=VARCHAR}, #{symptom,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{otherstatus,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{otherreason,jdbcType=VARCHAR}, #{sick,jdbcType=VARCHAR}, #{rate,jdbcType=VARCHAR}, 
      #{time,jdbcType=VARCHAR}, #{firstgo,jdbcType=VARCHAR}, #{otherfirstgo,jdbcType=VARCHAR}, 
      #{old,jdbcType=VARCHAR}, #{oldreason,jdbcType=VARCHAR}, #{total,jdbcType=VARCHAR}, 
      #{totalreason,jdbcType=VARCHAR}, #{follow,jdbcType=VARCHAR}, #{followreason,jdbcType=VARCHAR}, 
      #{happen,jdbcType=VARCHAR}, #{happenreason,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{childId,jdbcType=INTEGER}, #{firstMonth,jdbcType=INTEGER}, #{hfirstgo,jdbcType=VARCHAR}, 
      #{hotherfirstgo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.join.epileptic.entity.hzhIllnerssed.HzhIllnerssed" useGeneratedKeys="true">
    insert into hzh_illnerssed
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tell != null">
        tell,
      </if>
      <if test="first != null">
        `first`,
      </if>
      <if test="symptom != null">
        symptom,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="otherstatus != null">
        otherstatus,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="otherreason != null">
        otherreason,
      </if>
      <if test="sick != null">
        sick,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="firstgo != null">
        firstgo,
      </if>
      <if test="otherfirstgo != null">
        otherfirstgo,
      </if>
      <if test="old != null">
        `old`,
      </if>
      <if test="oldreason != null">
        oldreason,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="totalreason != null">
        totalreason,
      </if>
      <if test="follow != null">
        follow,
      </if>
      <if test="followreason != null">
        followreason,
      </if>
      <if test="happen != null">
        happen,
      </if>
      <if test="happenreason != null">
        happenreason,
      </if>
      <if test="count != null">
        `count`,
      </if>
      <if test="childId != null">
        child_id,
      </if>
      <if test="firstMonth != null">
        first_month,
      </if>
      <if test="hfirstgo != null">
        hfirstgo,
      </if>
      <if test="hotherfirstgo != null">
        hotherfirstgo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tell != null">
        #{tell,jdbcType=VARCHAR},
      </if>
      <if test="first != null">
        #{first,jdbcType=VARCHAR},
      </if>
      <if test="symptom != null">
        #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="otherstatus != null">
        #{otherstatus,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="otherreason != null">
        #{otherreason,jdbcType=VARCHAR},
      </if>
      <if test="sick != null">
        #{sick,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="firstgo != null">
        #{firstgo,jdbcType=VARCHAR},
      </if>
      <if test="otherfirstgo != null">
        #{otherfirstgo,jdbcType=VARCHAR},
      </if>
      <if test="old != null">
        #{old,jdbcType=VARCHAR},
      </if>
      <if test="oldreason != null">
        #{oldreason,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=VARCHAR},
      </if>
      <if test="totalreason != null">
        #{totalreason,jdbcType=VARCHAR},
      </if>
      <if test="follow != null">
        #{follow,jdbcType=VARCHAR},
      </if>
      <if test="followreason != null">
        #{followreason,jdbcType=VARCHAR},
      </if>
      <if test="happen != null">
        #{happen,jdbcType=VARCHAR},
      </if>
      <if test="happenreason != null">
        #{happenreason,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="childId != null">
        #{childId,jdbcType=INTEGER},
      </if>
      <if test="firstMonth != null">
        #{firstMonth,jdbcType=INTEGER},
      </if>
      <if test="hfirstgo != null">
        #{hfirstgo,jdbcType=VARCHAR},
      </if>
      <if test="hotherfirstgo != null">
        #{hotherfirstgo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.join.epileptic.entity.hzhIllnerssed.HzhIllnerssedExample" resultType="java.lang.Long">
    select count(*) from hzh_illnerssed
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hzh_illnerssed
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tell != null">
        tell = #{record.tell,jdbcType=VARCHAR},
      </if>
      <if test="record.first != null">
        `first` = #{record.first,jdbcType=VARCHAR},
      </if>
      <if test="record.symptom != null">
        symptom = #{record.symptom,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.otherstatus != null">
        otherstatus = #{record.otherstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.otherreason != null">
        otherreason = #{record.otherreason,jdbcType=VARCHAR},
      </if>
      <if test="record.sick != null">
        sick = #{record.sick,jdbcType=VARCHAR},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.firstgo != null">
        firstgo = #{record.firstgo,jdbcType=VARCHAR},
      </if>
      <if test="record.otherfirstgo != null">
        otherfirstgo = #{record.otherfirstgo,jdbcType=VARCHAR},
      </if>
      <if test="record.old != null">
        `old` = #{record.old,jdbcType=VARCHAR},
      </if>
      <if test="record.oldreason != null">
        oldreason = #{record.oldreason,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=VARCHAR},
      </if>
      <if test="record.totalreason != null">
        totalreason = #{record.totalreason,jdbcType=VARCHAR},
      </if>
      <if test="record.follow != null">
        follow = #{record.follow,jdbcType=VARCHAR},
      </if>
      <if test="record.followreason != null">
        followreason = #{record.followreason,jdbcType=VARCHAR},
      </if>
      <if test="record.happen != null">
        happen = #{record.happen,jdbcType=VARCHAR},
      </if>
      <if test="record.happenreason != null">
        happenreason = #{record.happenreason,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        `count` = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.childId != null">
        child_id = #{record.childId,jdbcType=INTEGER},
      </if>
      <if test="record.firstMonth != null">
        first_month = #{record.firstMonth,jdbcType=INTEGER},
      </if>
      <if test="record.hfirstgo != null">
        hfirstgo = #{record.hfirstgo,jdbcType=VARCHAR},
      </if>
      <if test="record.hotherfirstgo != null">
        hotherfirstgo = #{record.hotherfirstgo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hzh_illnerssed
    set id = #{record.id,jdbcType=INTEGER},
      tell = #{record.tell,jdbcType=VARCHAR},
      `first` = #{record.first,jdbcType=VARCHAR},
      symptom = #{record.symptom,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      otherstatus = #{record.otherstatus,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      otherreason = #{record.otherreason,jdbcType=VARCHAR},
      sick = #{record.sick,jdbcType=VARCHAR},
      rate = #{record.rate,jdbcType=VARCHAR},
      `time` = #{record.time,jdbcType=VARCHAR},
      firstgo = #{record.firstgo,jdbcType=VARCHAR},
      otherfirstgo = #{record.otherfirstgo,jdbcType=VARCHAR},
      `old` = #{record.old,jdbcType=VARCHAR},
      oldreason = #{record.oldreason,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=VARCHAR},
      totalreason = #{record.totalreason,jdbcType=VARCHAR},
      follow = #{record.follow,jdbcType=VARCHAR},
      followreason = #{record.followreason,jdbcType=VARCHAR},
      happen = #{record.happen,jdbcType=VARCHAR},
      happenreason = #{record.happenreason,jdbcType=VARCHAR},
      `count` = #{record.count,jdbcType=INTEGER},
      child_id = #{record.childId,jdbcType=INTEGER},
      first_month = #{record.firstMonth,jdbcType=INTEGER},
      hfirstgo = #{record.hfirstgo,jdbcType=VARCHAR},
      hotherfirstgo = #{record.hotherfirstgo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.join.epileptic.entity.hzhIllnerssed.HzhIllnerssed">
    update hzh_illnerssed
    <set>
      <if test="tell != null">
        tell = #{tell,jdbcType=VARCHAR},
      </if>
      <if test="first != null">
        `first` = #{first,jdbcType=VARCHAR},
      </if>
      <if test="symptom != null">
        symptom = #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="otherstatus != null">
        otherstatus = #{otherstatus,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="otherreason != null">
        otherreason = #{otherreason,jdbcType=VARCHAR},
      </if>
      <if test="sick != null">
        sick = #{sick,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=VARCHAR},
      </if>
      <if test="firstgo != null">
        firstgo = #{firstgo,jdbcType=VARCHAR},
      </if>
      <if test="otherfirstgo != null">
        otherfirstgo = #{otherfirstgo,jdbcType=VARCHAR},
      </if>
      <if test="old != null">
        `old` = #{old,jdbcType=VARCHAR},
      </if>
      <if test="oldreason != null">
        oldreason = #{oldreason,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=VARCHAR},
      </if>
      <if test="totalreason != null">
        totalreason = #{totalreason,jdbcType=VARCHAR},
      </if>
      <if test="follow != null">
        follow = #{follow,jdbcType=VARCHAR},
      </if>
      <if test="followreason != null">
        followreason = #{followreason,jdbcType=VARCHAR},
      </if>
      <if test="happen != null">
        happen = #{happen,jdbcType=VARCHAR},
      </if>
      <if test="happenreason != null">
        happenreason = #{happenreason,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        `count` = #{count,jdbcType=INTEGER},
      </if>
      <if test="childId != null">
        child_id = #{childId,jdbcType=INTEGER},
      </if>
      <if test="firstMonth != null">
        first_month = #{firstMonth,jdbcType=INTEGER},
      </if>
      <if test="hfirstgo != null">
        hfirstgo = #{hfirstgo,jdbcType=VARCHAR},
      </if>
      <if test="hotherfirstgo != null">
        hotherfirstgo = #{hotherfirstgo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.join.epileptic.entity.hzhIllnerssed.HzhIllnerssed">
    update hzh_illnerssed
    set tell = #{tell,jdbcType=VARCHAR},
      `first` = #{first,jdbcType=VARCHAR},
      symptom = #{symptom,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      otherstatus = #{otherstatus,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      otherreason = #{otherreason,jdbcType=VARCHAR},
      sick = #{sick,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=VARCHAR},
      firstgo = #{firstgo,jdbcType=VARCHAR},
      otherfirstgo = #{otherfirstgo,jdbcType=VARCHAR},
      `old` = #{old,jdbcType=VARCHAR},
      oldreason = #{oldreason,jdbcType=VARCHAR},
      total = #{total,jdbcType=VARCHAR},
      totalreason = #{totalreason,jdbcType=VARCHAR},
      follow = #{follow,jdbcType=VARCHAR},
      followreason = #{followreason,jdbcType=VARCHAR},
      happen = #{happen,jdbcType=VARCHAR},
      happenreason = #{happenreason,jdbcType=VARCHAR},
      `count` = #{count,jdbcType=INTEGER},
      child_id = #{childId,jdbcType=INTEGER},
      first_month = #{firstMonth,jdbcType=INTEGER},
      hfirstgo = #{hfirstgo,jdbcType=VARCHAR},
      hotherfirstgo = #{hotherfirstgo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>