<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.join.epileptic.mapper.hzhDiagnose.HzhDiagnoseMapper">
  <resultMap id="BaseResultMap" type="com.join.epileptic.entity.hzhDiagnose.HzhDiagnose">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="remake" jdbcType="VARCHAR" property="remake" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="child_id" jdbcType="INTEGER" property="childId" />
  </resultMap>
  <resultMap id="multiSelectResultMap" type="com.join.epileptic.entity.hzhDiagnose.HzhDiagnoseDto">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="remake" jdbcType="VARCHAR" property="remake" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="child_id" jdbcType="INTEGER" property="childId" />
    <result column="name" property="name"/>
    <result column="sicknum" property="sicknum"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, remake, content, child_id
  </sql>
  <select id="selectByExample" parameterType="com.join.epileptic.entity.hzhDiagnose.HzhDiagnoseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hzh_diagnose
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hzh_diagnose
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hzh_diagnose
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.join.epileptic.entity.hzhDiagnose.HzhDiagnoseExample">
    delete from hzh_diagnose
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.join.epileptic.entity.hzhDiagnose.HzhDiagnose" useGeneratedKeys="true">
    insert into hzh_diagnose (remake, content, child_id
      )
    values (#{remake,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{childId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.join.epileptic.entity.hzhDiagnose.HzhDiagnose" useGeneratedKeys="true">
    insert into hzh_diagnose
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="remake != null">
        remake,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="childId != null">
        child_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="remake != null">
        #{remake,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="childId != null">
        #{childId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.join.epileptic.entity.hzhDiagnose.HzhDiagnoseExample" resultType="java.lang.Long">
    select count(*) from hzh_diagnose
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hzh_diagnose
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.remake != null">
        remake = #{record.remake,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.childId != null">
        child_id = #{record.childId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hzh_diagnose
    set id = #{record.id,jdbcType=INTEGER},
      remake = #{record.remake,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      child_id = #{record.childId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.join.epileptic.entity.hzhDiagnose.HzhDiagnose">
    update hzh_diagnose
    <set>
      <if test="remake != null">
        remake = #{remake,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="childId != null">
        child_id = #{childId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.join.epileptic.entity.hzhDiagnose.HzhDiagnose">
    update hzh_diagnose
    set remake = #{remake,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      child_id = #{childId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="multiSelect" resultMap="multiSelectResultMap">
    select * from hzh_diagnose d left join hzh_general g on (d.child_id = g.id) where 1 = 1
    <if test="hzhGeneral.name != null and hzhGeneral.name != ''">
      and g.name like concat('%','${hzhGeneral.name}','%')
    </if>
    <if test="hzhDiagnose.remake != null">
      and remake = #{hzhDiagnose.remake,jdbcType=VARCHAR}
    </if>
    <if test="hzhDiagnose.content != null">
      and content = #{hzhDiagnose.content,jdbcType=VARCHAR}
    </if>
    <if test="hzhDiagnose.childId != null">
      and child_id = #{hzhDiagnose.childId,jdbcType=INTEGER}
    </if>
  </select>
</mapper>